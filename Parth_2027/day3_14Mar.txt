//61. Rotate List

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null)return head;
        if(k==0)return head;
        ListNode temp=head;
        int len=1;
        while(temp.next!=null){
            temp=temp.next;
            len++;
        }
        if(k%len==0) return head;
        else{
            k=k%len;
        }
        temp.next=head;
        
        ListNode n=head;
        int count=1;
        while(count!=len-k){
            n=n.next;
            count++;
        }
        head=n.next;
        n.next=null;
        return head;

    }
}
