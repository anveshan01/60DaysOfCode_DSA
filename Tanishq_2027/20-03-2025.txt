class Solution {
    // public int bnry(int arr[], int high, int low){
    //     while(low<=high){
    //         int mid = low+(high-low)/2;
    //         if(mid - 1 < 0 && arr[mid] > arr[mid+1] ||
    //          mid + 1 == arr.length && arr[mid] > arr[mid-1] ){
    //             return mid;
    //         }
    //         if(arr[mid]>arr[mid-1] && arr[mid]>arr[mid+1]){
    //             return mid;
    //         }
    //         if(arr[mid]<arr[mid+1]){
    //             low = mid+1;
    //             return bnry(arr, high, low);
    //         }else{
    //             high = mid-1;
    //             return bnry(arr, high, low);
    //         }
    //     }
    //     return -1;
    // }
    public int findPeakElement(int[] nums) {
        int low = 0;
        int high = nums.length-1;
        
        while(low<high){
            int mid = low+(high-low)/2;
            if(nums[mid] > nums[mid+1]){
                high = mid;
            }else{
                low = mid+1;
            }
        }
        return low;
    }
}
